#!/bin/bash
set -e

# -----------------------------------------------------------------------------
# Script: _20_create_project_sf.sh
# Descri√ß√£o: Inicializa ambiente Salesforce com base em um JSON de configura√ß√£o
# Autor: Millena Ferreira dos Reis
# Data de cria√ß√£o: 2025-05-05
# Vers√£o: 1.0.0
# -----------------------------------------------------------------------------

# === Configura√ß√µes iniciais ===
set -euo pipefail
IFS=$'\n\t'

# === Constantes ===
CONFIG_FILE="_11_config_org.json"


# === Fun√ß√µes utilit√°rias para mostrar no termianl ===
head()    { echo -e "\033[1;36m| $*\033[0m"; }
info()    { echo -e "\033[1;34m| [ INFO ] ‚ù±‚ù±‚ù± $*\033[0m"; }
warn()    { echo -e "\033[1;33m| [ ‚ö† ] $*\033[0m"; }
error()   { echo -e "\033[1;31m| [ ‚úñ ] $*\033[0m"; }
success() { echo -e "\033[1;32m| [ ‚úî ] $*\033[0m"; }


# # === recepcao json _10_config_org.json ===
get_json_value() {
  node -e "console.log(require('./$CONFIG_FILE').$1)"
}


# # === timestamp para log no terminal ===
timestamp() {
  date "+%Y-%m-%d %H:%M:%S"
}

# # === modelos dos arquivos de configura√ß√£o projeto e retrieve (futuro) ===
MODEL_SFDX="_21_model_sfdx-project.json"
MODEL_MANIFEST="_22_model_package.xml"


# # === cabe√ßalho script ===
head "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
head " üèÅ INICIANDO PROCESSO DE CRIA√á√ÉO AUTOMATIZADA SALESFORCE - [$(timestamp)]"
head "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
info "| ‚ù±‚ù±‚ù±‚ù±‚ù±‚ù±‚ù± SUGEST√ÉO: Fa√ßa login na organiza√ß√£o em quest√£o via web."
info "|                  Normalmente, facilita o processo de autentica√ß√£o."
echo "|"


# # === Leitura do _config_org.json ===
BASE_PATH="$(cd "$(dirname "$0")" && pwd)"
## ===>>>> Informa√ß√µes para projeto x organiza√ß√£o/sandbox <<<<=== ##
INFO_ORG_ALIAS=$(get_json_value infoOrg.alias)
INFO_ORG_ALIAS_PROJ=$(get_json_value infoOrg.aliasProject)
INFO_ORG_URL_LOGIN=$(get_json_value infoOrg.urlLogin)
INFO_ORG_USR_LOGIN=$(get_json_value infoOrg.username)
INFO_ORG_MANIFEST_PATH=$(get_json_value infoOrg.manifestPath)
EXPECTED_PATH=$(get_json_value infoOrg.localProjectPath | tr -d '\r\n'| sed 's|\\|/|g')
## ===>>>> Informa√ß√µes para projeto x DevHub x Scratch Org <<<<=== ##
INFO_DHSO_ALIAS=$(get_json_value infoDevHub.alias)
INFO_DHSO_ALIAS_PROJ=$(get_json_value infoDevHub.aliasProject)
INFO_ORG_MANIFEST_PATH=$(get_json_value infoDevHub.manifestPath)
SCRATCH_DEF_PATH=$(get_json_value infoDevHub.scratchDefPath | tr -d '\r\n'| sed 's|\\|/|g')


# # === Checa diret√≥rio atual ===
CURRENT_PATH=$(pwd -W 2>/dev/null || pwd)
CURRENT_PATH=$(echo "$CURRENT_PATH" | sed 's|\\|/|g')

head "|------------------------------------------------------------"
head "| [ ‚õø ] - Checando configura√ß√µes json..."
head "|------------------------------------------------------------"
echo "|"
info " ‚ù±‚ù±‚ù±‚ù±‚ù±‚ù±‚ù± Diret√≥rio atual: $CURRENT_PATH"
info " ‚ù±‚ù±‚ù±‚ù±‚ù±‚ù±‚ù± Diret√≥rio esperado: $EXPECTED_PATH"
echo "|"

if [[ "$CURRENT_PATH" != "$EXPECTED_PATH" ]]; then
  warn "| Diret√≥rio atual √© diferente do esperado no JSON."
  info "|  Esperado: $EXPECTED_PATH"
  info "|  Atual:    $CURRENT_PATH"
  read -rp "|  ‚ù±‚ù±‚ù±‚ù±‚ù±‚ù±‚ù± Deseja continuar mesmo assim? (s/n) ‚ù± " answer
  [[ "$answer" != "s" ]] && error "Execu√ß√£o cancelada pelo usu√°rio." && exit 1
fi


head "|------------------------------------------------------------"
head "| [ ‚õø ] - Iniciando antentica√ß√£o organiza√ß√£o..."
head "|------------------------------------------------------------"

# # === Autentica√ß√£o na org Salesforce ===
info "Autenticando organiza√ß√£o com alias '$INFO_ORG_ALIAS'..."
info ">>> SUGEST√ÉO: Se voc√™ ainda n√£o fez login via web, use uma janela an√¥nima <<<"
echo "|"

if sf org login device --alias "$INFO_ORG_ALIAS" --instance-url "$INFO_ORG_URL_LOGIN" --set-default; then
  sf config set target-org "$INFO_ORG_ALIAS"
  success "Organiza√ß√£o autenticada com sucesso!"
  echo "|"
else
  error "‚ù±‚ù±‚ù± Falha no login. Verifique o navegador ou tente novamente com uma aba an√¥nima."
  exit 1
fi


head "|------------------------------------------------------------"
head "| [ ‚õø ] - Iniciando cria√ß√£o projeto Salesforce..."
head "|------------------------------------------------------------"
echo "|"

info "‚õè  Criando projeto Salesforce ..."
info " ‚ù±‚ù±‚ù±‚ù±‚ù±‚ù±‚ù± Criando projeto alias = $INFO_ORG_ALIAS_PROJ"
echo "|"

if sf project generate --name "$(basename "$PWD")" --template standard; then
  success "Projeto criado com sucesso com alias $INFO_ORG_ALIAS_PROJ definido como padr√£o!"
  echo "|"
else
  error "‚ù±‚ù±‚ù± Falha ao criar o projeto Salesforce '$INFO_ORG_ALIAS_PROJ'"
  exit 1
fi


info "‚õè  Substituindo arquivos com modelos personalizados..."
echo "|"
for file in "MODEL_SFDX" "MODEL_MANIFEST"; do
  if [ ! -f "$BASE_PATH/$file" ]; then
    error "Arquivo obrigat√≥rio '$BASE_PATH/$file' n√£o foi encontrado. Verifique se est√° no diret√≥rio correto."
    exit 1
  fi
done


cp "$BASE_PATH/MODEL_SFDX" "sfdx-project.json"
# cp "$BASE_PATH/model_project-scratch-def.json" $scratchDefPath"
# cp "$BASE_PATH/_init_project/.gitattributes" .
mkdir -p "$(dirname "$INFO_ORG_MANIFEST_PATH")"
cp "$BASE_PATH/MODEL_MANIFEST" "$INFO_ORG_MANIFEST_PATH"

mod_time=$(date -d @"$(stat -c %Y "$BASE_PATH/manifest/package.xml")" "+%d/%m/%Y %H:%M:%S")
success " ‚ù±‚ù± √öltima modifica√ß√£o /manifest/package.xml: $mod_time"

mod_time=$(date -d @"$(stat -c %Y sfdx-project.json)" "+%d/%m/%Y %H:%M:%S")
success " ‚ù±‚ù± √öltima modifica√ß√£o sfdx-project.json: $mod_time"
